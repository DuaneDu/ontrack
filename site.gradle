/**
 * Site generation
 *
 * Must be called AFTER the current version has been promoted in Ontrack to the RELEASE promotion level.
 *
 * This means having a Site job in the pipeline, after the Publish one, calling the `site` task.
 */

import net.nemerosa.ontrack.gradle.OntrackLastReleases

plugins {
    id 'org.ajoberstar.git-publish' version '2.0.0'
}

task siteOntrackLast2Releases(type: OntrackLastReleases) {
    releaseCount = 2
    releasePattern = /2\.[\d]+\..*/
}

task siteOntrackLast3Releases(type: OntrackLastReleases) {
    releaseCount = 6
    releasePattern = /3\.[\d]+\..*/
}

task sitePagesDocJs {
    dependsOn 'siteOntrackLast2Releases'
    dependsOn 'siteOntrackLast3Releases'
    outputs.file project.file('build/site/page/doc.js')
    doLast {
        project.file('build/site/page').mkdirs()
        project.file('build/site/page/doc.js').text =
                "var releases = [${(siteOntrackLast3Releases.releases + siteOntrackLast2Releases.releases).collect { "'${it.name}'" }.join(',')}];"
    }
}

gitPublish {
    repoUri = project.properties.ontrackGitHubUri
    branch = project.properties.ontrackGitHubPages
    contents {
        from 'ontrack-site/src/main/web'
        from('build/site/page') {
            include 'doc.js'
            into 'javascripts/doc/'
        }
    }
    commitMessage = "GitHub pages for version ${ontrackVersion}" as String
}

gitPublishCopy.dependsOn sitePagesDocJs

task site {
    dependsOn 'gitPublishPush'
}
