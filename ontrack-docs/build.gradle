plugins {
    id "groovy"
    id "org.asciidoctor.jvm.convert" version "2.3.0"
    id "org.asciidoctor.jvm.pdf" version "2.3.0"
}

dependencies {
    compile project(':ontrack-dsl')
    compile project(':ontrack-json')
    compile 'commons-io:commons-io'
    compile 'org.codehaus.groovy:groovy'
    compile 'org.codehaus.groovy:groovy-groovydoc'

    runtime("org.fusesource.jansi:jansi:1.18")
}

if (documentationProfile) {

    asciidoctorj {
        modules {
            diagram.setVersion("1.5.4.1")
        }
    }

    task generateDoc(type: JavaExec) {
        dependsOn 'classes'
        dependsOn ':ontrack-dsl:classes'
        main = 'net.nemerosa.ontrack.docs.DSLDocGenerator'
        classpath = sourceSets.main.runtimeClasspath
        args = [
                project(':ontrack-dsl').file('src/main/groovy'),
                'build/dsl',
        ]

        inputs.dir project(':ontrack-dsl').file('src/main/groovy')
        outputs.dir 'build/dsl'
    }

    task prepareGeneratedDoc(type: Copy) {
        dependsOn 'generateDoc'
        from 'build/dsl'
        include '*.adoc'
        into 'src/docs/asciidoc/generated'
    }

    // HTML specific settings
    asciidoctor {
        dependsOn prepareGeneratedDoc
        description = "Generates HTML documentation."
        attributes = [
                "ontrack-version"    : version,
                "spring-boot-version": springBootVersion,
                "icons"              : "font"
        ]
        logDocuments = true
        baseDirFollowsSourceDir()
        sources {
            include("index.adoc")
        }
    }

    // PDF specific settings

    asciidoctorPdf {
        dependsOn("asciidoctor")
        description = "Generates PDF documentation."
        attributes = [
                "ontrack-version"    : version,
                "spring-boot-version": springBootVersion,
                "icons"              : "font",
                "imagesdir"          : file("build/docs/asciidoc")
        ]
        logDocuments = true
        baseDirFollowsSourceDir()
        sources {
            include("index.adoc")
        }
    }

    build.dependsOn 'asciidoctor'
    build.dependsOn 'asciidoctorPdf'

    rootProject.tasks.publicationPackage {
        dependsOn ":ontrack-docs:asciidoctor"
        dependsOn ":ontrack-docs:asciidoctorPdf"
        from(project(":ontrack-docs").file("build/docs/asciidoc")) {
            into("html5")
        }
        from(project(":ontrack-docs").file("build/docs/asciidocPdf")) {
            include("*.pdf")
            into("pdf")
        }
    }
}
