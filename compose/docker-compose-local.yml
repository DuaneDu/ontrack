version: "2.1"

services:

  # Ontrack container
  ontrack:
    image: "nemerosa/ontrack:latest"
    restart: always
    environment:
      PROFILE: prod
      JAVA_OPTIONS: "${JAVA_OPTIONS:--Xms1024m -Xmx1024m}"
      # Database
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres/ontrack"
      # Elasticsearch
      SPRING_ELASTICSEARCH_URIS: "http://elasticsearch:9200"
      # Rabbit MQ
      SPRING_RABBITMQ_HOST: rabbit
      SPRING_RABBITMQ_USERNAME: ontrack
      SPRING_RABBITMQ_PASSWORD: ontrack
    depends_on:
      postgres:
        condition: service_started
      elasticsearch:
        condition: service_started
      rabbit:
        condition: service_started
    ports:
      - "8080:8080"
      - "8800:8800"

  # Ontrack UI
  ui:
    image: "nemerosa/ontrack-ui:latest"
    restart: always
    environment:
      # External URLs!
      NEXT_PUBLIC_ONTRACK_URL: http://localhost:8080
      NEXT_PUBLIC_ONTRACK_UI_URL: http://localhost:3000
    depends_on:
      ontrack:
        condition: service_healthy
    ports:
      - "3000:3000"

  # Postgresql database
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ontrack
      POSTGRES_USER: ontrack
      POSTGRES_PASSWORD: ontrack

  # ElasticSearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    restart: always
    environment:
      - "discovery.type=single-node"
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1

  # Rabbit MQ
  rabbit:
    image: rabbitmq:3.8.25-management
    restart: always
    hostname: rabbit
    environment:
      RABBITMQ_DEFAULT_USER: ontrack
      RABBITMQ_DEFAULT_PASS: ontrack
