buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'

ext {
    seleniumVersion = '3.11.0'
}

dependencies {
    testImplementation(project(':ontrack-client'))
    testImplementation(project(':ontrack-dsl'))
    // FIXME testImplementation(project(':ontrack-dsl-shell'))
    testImplementation(project(':ontrack-test-utils'))
    testImplementation("org.apache.commons:commons-lang3")
    testImplementation("commons-io:commons-io")
    testImplementation("org.codehaus.groovy:groovy-all")
    testImplementation("org.springframework.boot:spring-boot-starter")

    testImplementation("org.influxdb:influxdb-java")

    testImplementation("org.seleniumhq.selenium:selenium-java:${seleniumVersion}")
    testImplementation("org.seleniumhq.selenium:selenium-support:${seleniumVersion}")
}

//noinspection GroovyAssignabilityCheck
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.seleniumhq.selenium' && details.requested.name != 'htmlunit-driver') {
            details.useVersion seleniumVersion
        }
    }
}

/**
 * Packaging
 */

task testJar(type: Jar) {
    from sourceSets.test.output
}

artifacts {
    archives testJar
}

//bootRepackage {
//    mainClass = 'net.nemerosa.ontrack.acceptance.boot.Start'
//    withJarTask = 'testJar'
//    customConfiguration = 'testRuntime'
//    classifier = 'app'
//}

task normaliseJar {
    dependsOn bootRepackage
    doFirst {
        project.mkdir "${buildDir}/libs"
        // Used for local testing only
        ant.copy file: bootRepackage.outputs.files.singleFile, tofile: "${buildDir}/libs/ontrack-acceptance.jar"
    }
}

task acceptanceDockerPrepareEnv(type: Copy) {
    dependsOn normaliseJar
    from "${buildDir}/libs/ontrack-acceptance.jar"
    into "${projectDir}/src/main/docker"
}

assemble.dependsOn normaliseJar

task dockerBuild(type: Exec, dependsOn: acceptanceDockerPrepareEnv) {
    executable 'docker'
    args = [
            'build',
            '--tag',
            "nemerosa/ontrack-acceptance:${versioning.info.display}",
            project.file('src/main/docker')
    ]
}

task dockerLatest(type: Exec, dependsOn: dockerBuild) {
    executable 'docker'
    args = [
            'tag',
            "nemerosa/ontrack-acceptance:${versioning.info.display}",
            "nemerosa/ontrack-acceptance:latest",
    ]
}

// FIXME rootProject.tasks.publicationPackage {
//    from bootRepackage
//}

/**
 * Local test definitions
 */

ext {
    ontrackUrl = 'http://localhost:8080'
    ontrackJvmOptions = project.hasProperty('ontrackJvmOptions') ? project.ontrackJvmOptions : '-Xmx256m'
}

// FIXME acceptanceTest {
//    outputs.upToDateWhen { false }  // Always run tests
//    systemProperty 'ontrack.url', ontrackUrl
//    systemProperty 'ontrack.implicitWait', project.hasProperty('ontrackImplicitWait') ? ontrackImplicitWait : 5
//}

// Disable unit tests (none in this project)
test {
    enabled = false
}

// Disable normal JAR creation

jar {
    enabled = false
}

publishing {
    publications {
        mavenCustom(MavenPublication) {
            // Clears all previous artifacts defined in root `build.gradle`
            artifacts = [testJar]
        }
    }
}
